var search_data = {"index":{"searchIndex":["moviedata","movietest","add_to_result()","load_data()","load_test()","mean()","most_similar()","movies()","new()","popularity()","popularity_list()","popularity_list2()","predict()","rating()","rms()","run_test()","similarity()","stddev()","to_a()","viewers()"],"longSearchIndex":["moviedata","movietest","movietest#add_to_result()","moviedata#load_data()","moviedata#load_test()","movietest#mean()","moviedata#most_similar()","moviedata#movies()","moviedata::new()","moviedata#popularity()","moviedata#popularity_list()","moviedata#popularity_list2()","moviedata#predict()","moviedata#rating()","movietest#rms()","moviedata#run_test()","moviedata#similarity()","movietest#stddev()","movietest#to_a()","moviedata#viewers()"],"info":[["MovieData","","MovieData.html","",""],["MovieTest","","MovieTest.html","",""],["add_to_result","MovieTest","MovieTest.html#method-i-add_to_result","(tuple)","<p>adds a tuple [u,m,r,p] to the result array\n"],["load_data","MovieData","MovieData.html#method-i-load_data","(filename='./ml-100k/u.data')","<p>Reads the data from training set and stores it in appropriate data\nstructres\n"],["load_test","MovieData","MovieData.html#method-i-load_test","(filename)","<p>Reads the data from test set and stores it in appropriate data structres\n"],["mean","MovieTest","MovieTest.html#method-i-mean","()","<p>returns the average predication error\n"],["most_similar","MovieData","MovieData.html#method-i-most_similar","(u)","<p>Returns array of users which are most similar to u.\n"],["movies","MovieData","MovieData.html#method-i-movies","(u)","<p>Returns the array of movies that user u has watched\n"],["new","MovieData","MovieData.html#method-c-new","(folderpath,filename=\"u\")","<p>The constructor of the class\n"],["popularity","MovieData","MovieData.html#method-i-popularity","(movie_id)","<p>Retrurns the popularity of a movie. Popularity is defined as the average of\nratings for that movie\n"],["popularity_list","MovieData","MovieData.html#method-i-popularity_list","()","<p>Returns a list of movies sorted by popularity in decreasing order\n"],["popularity_list2","MovieData","MovieData.html#method-i-popularity_list2","()","<p>Returns a list of movies sorted by popularity in decreasing order (faster\nversion of the function popularity_list …\n"],["predict","MovieData","MovieData.html#method-i-predict","(u,m)","<p>Returns a floating point number between 1.0 and 5.0 as an estimate of what\nuser u would rate movie m …\n"],["rating","MovieData","MovieData.html#method-i-rating","(u,m)","<p>Returns the rating that user u gave movie m in the training set, and 0 if\nuser u did not rate movie m …\n"],["rms","MovieTest","MovieTest.html#method-i-rms","()","<p>returns the root mean square error of the prediction\n"],["run_test","MovieData","MovieData.html#method-i-run_test","(k)","<p>Runs the predict method on the first k ratings in the test set and returns\na MovieTest object containing …\n"],["similarity","MovieData","MovieData.html#method-i-similarity","(user1,user2)","<p>Returns the similarity between two users. Similarity is defined as the\naverage of (4 - distance between …\n"],["stddev","MovieTest","MovieTest.html#method-i-stddev","()","<p>t.stddev returns the standard deviation of the error\n"],["to_a","MovieTest","MovieTest.html#method-i-to_a","()","<p>returns an array of the predictions in the form [u,m,r,p]\n"],["viewers","MovieData","MovieData.html#method-i-viewers","(m)","<p>Returns the array of users that have seen movie m\n"]]}}